HTML 5
======
HTML5 is developed by World Wide Web Consortium (W3C) and the Web Hypertext Application Technology Working Group (WHATWG).

Before the development of HTML5, we were in compulsion to work in Photoshop and Flash application, but with the development of HTML5, these works is reduced.

New Features of HTML 5
----------------------
1) New Semantic Elements

2) Forms 2.0 - Improvements to HTML web forms where new attributes and new input types are introduced for <input> tag

3) Persistent Local Storage - To achieve without resorting to third-party plugins.
Cookies (vs) Local storage and Session storage

4) WebSocket - A next-generation bidirectional communication technology for web applications.

5) Server-Sent Events - HTML5 introduces events which flow from web server to the web browsers and they are called Server-Sent Events (SSE).

6) Canvas - This supports a two-dimensional drawing surface that we can program with JavaScript.

7)  Audio & Video - You can embed audio or video on your web pages without resorting to third-party plugins.

8)  Geolocation - we can choose to share their physical location with your web application.

9)  Microdata - This lets you create your own vocabularies beyond HTML5 and extend your web pages with custom semantics.

10) Drag and drop - Drag and drop the items from one location to another location on a the same webpage.

11) Better support for Search Engines
 etc



New Semantic Tags
=================
1) <header>
2) <nav>
3) <section>
4) <article>
5) <aside>
6) <figure> & <figcaption>
7) <dialog>
8) <footer>
9) <details> & <summary>
etc

Migration from HTML4 to HTML5
-----------------------------
    In HTML4 		In HTML5

<div id="header"> 	<header>
<div id="menu"> 	<nav>
<div id="content"> 	<section>
<div id="post"> 	<article>
<div id="footer"> 	<footer>


Elements Removed in HTML5
-------------------------
Element Removed | Use instead in HTML5
---------------   --------------------
<acronym> 		<abbr>
<applet> 		<object>
<basefont> 		CSS
<big> 			CSS
<center> 		CSS
<font> 			CSS
<frame> 	 
<frameset> 		<iframe> 
<noframes> 	 
<strike> 		CSS
<tt> 			CSS



HTML5 - Audio & Video
=====================
The HTML5 <audio> and <video> tags are used to add media to a website.

HTML Audio Tag
=============
HTML <audio> tag is used to define sounds such as music and other audio clips. Currently there are three supported file format for HTML 5 audio tag.

(a)  .mp3  (b) .wav   (c) .ogg

Multiple <source> elements can link to different audio files. The browser will use the first recognized format.


Attributes of <audio>:

controls	- It defines the audio controls which is displayed with play/pause buttons.

autoplay	- It specifies that the audio will start playing as soon as it is ready.

loop	- It specifies that the audio file will start over again, every time when it is completed.

muted	- It is used to mute the audio output.

HTML5 Video Tag
===============

The HTML <video> tag is used for streaming video files such as a movie clip, song clip on the web page.

Currently, there are three video formats supported for HTML5 <video> tag:

(a) .mp4   (b) .webM   (c) .ogg

Attributes of <video>

> controls
> height	
> width
> poster	 - It specifies the image which is displayed on the screen when the video is not played.
> autoplay
> loop
> muted




HTML5 Geolocation
==================
The HTML5 Geolocation API is used to get the geographical position of a user. The position is not available unless the user approves it.

Steps Involved:

(a)  Check if Geolocation is supported

(b)  If supported, call the getCurrentPosition() method. If not, display a message to the user

(c)  If the getCurrentPosition() method is successful, it returns a coordinates object to the function specified in the parameter 

(d) The specified function outputs the Latitude and Longitude


The Geolocation.getCurrentPosition() method is used to get the current position of the device.

navigator.geolocation.getCurrentPosition(success[, error[, options]])

success -  A callback function that takes a Position object as its input parameter.

error -  An optional callback function that takes a PositionError object as its input parameter.

options -  An optional PositionOptions object. This optional paramter specifies a set of options for retrieving the location information. You can specify 
(a) Accuracy of the returned location information 
(b) Timeout for retrieving the location information and 
(c) Use of cached location information 



HTML5 - Web Storage
===================
HTML5 introduces two mechanisms, similar to HTTP cookies, for storing structured data on the client side and to overcome the following drawbacks.

(a) Cookies are included with every HTTP request, thereby slowing down your web application by transmitting the same data.

(b) Cookies are limited to less amount of data . 

The two web storages of HTML 5 are 
 (a) session storage and 
 (b) local storage

Unlike cookies, the storage limit of web storage is far larger (at least 5MB) and information is never transferred to the server.

Local storage is per domain. All pages, from one origin, can store and access the same data.


HTML web storage provides two objects for storing data on the client:

(a)  window.localStorage - stores data with no expiration date

(b)  window.sessionStorage - stores data for one session (data is lost when the browser tab is closed)


1) Local Storage:
	- data will be available forever, until you manually erase it (or) user deletes it.

2) Session Storage
	- data will be cleared automatically, when you close the browser window / or when session expires.

Note:  'localStorage' and 'sessionStorage' are the pre-defined objects.



To set / store the data in localStorage

  (a)  localStorage.variable = value;
		(or)
  (b) localStorage.setItem("variable", value);


To set / store the data in sessionStorage:

  (a) sessionStorage.variable = value;
		(or)
  (b) sessionStorage.setItem("variable",value);

To get the data from localStorage:

  (a) localStorage.variable
		(or)
  (b) localStorage.getItem("variable");


To get the data from sessionStorage:

  (a) sessionStorage.variable
		(or)
  (b) sessionStorage.getItem("variable");

Erasing the data:
   localStorage.x = null;
   sessionStorage.x = null;


HTML5 introduces the localStorage attribute which would be used to access a page's local storage area without no time limit and this local storage will be available whenever you would use that page.


localStorage.setItem("mytime", Date.now()); 
localStorage.removeItem("mytime"); 


